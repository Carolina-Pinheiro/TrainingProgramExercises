{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "func",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gas",
          "type": "uint256"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "basePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "buyItem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "sellItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "transferItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c151a1c995954da59db58539195609a1b815250604051806040016040528060048152602001633353494760e01b81525081600090816200006691906200012e565b5060016200007582826200012e565b5050662386f26fc1000060075550620001fa565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000b457607f821691505b602082108103620000d557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012957600081815260208120601f850160051c81016020861015620001045750805b601f850160051c820191505b81811015620001255782815560010162000110565b5050505b505050565b81516001600160401b038111156200014a576200014a62000089565b62000162816200015b84546200009f565b84620000db565b602080601f8311600181146200019a5760008415620001815750858301515b600019600386901b1c1916600185901b17855562000125565b600085815260208120601f198616915b82811015620001cb57888601518255948401946001909101908401620001aa565b5085821015620001ea5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116a2806200020a6000396000f3fe6080604052600436106101025760003560e01c80636352211e11610095578063b88d4fde11610064578063b88d4fde1461031d578063c7876ea41461033d578063c87b56dd14610353578063dd62b03914610373578063e985e9c51461038657600080fd5b80636352211e1461029a57806370a08231146102ba57806395d89b41146102e8578063a22cb465146102fd57600080fd5b8063096c5e1a116100d1578063096c5e1a1461021a57806323b872dd1461023a57806342842e0e1461025a5780636295c61a1461027a57600080fd5b806301ffc9a71461016957806306fdde031461019e578063081812fc146101c0578063095ea7b3146101f857600080fd5b36610164577fdd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b55a60405161015a91906040808252600790820152667265636569766560c81b6060820152602081019190915260800190565b60405180910390a1005b600080fd5b34801561017557600080fd5b506101896101843660046111ef565b6103a6565b60405190151581526020015b60405180910390f35b3480156101aa57600080fd5b506101b36103f8565b604051610195919061125c565b3480156101cc57600080fd5b506101e06101db36600461126f565b61048a565b6040516001600160a01b039091168152602001610195565b34801561020457600080fd5b5061021861021336600461129d565b6104b1565b005b34801561022657600080fd5b5061021861023536600461129d565b6105cb565b34801561024657600080fd5b506102186102553660046112c9565b61060b565b34801561026657600080fd5b506102186102753660046112c9565b61063c565b34801561028657600080fd5b506102186102953660046112c9565b610657565b3480156102a657600080fd5b506101e06102b536600461126f565b610672565b3480156102c657600080fd5b506102da6102d536600461130a565b6106d2565b604051908152602001610195565b3480156102f457600080fd5b506101b3610758565b34801561030957600080fd5b50610218610318366004611327565b610767565b34801561032957600080fd5b5061021861033836600461137b565b610776565b34801561034957600080fd5b506102da60075481565b34801561035f57600080fd5b506101b361036e36600461126f565b6107ae565b6102da61038136600461130a565b610822565b34801561039257600080fd5b506101896103a136600461145b565b6108da565b60006001600160e01b031982166380ac58cd60e01b14806103d757506001600160e01b03198216635b5e139f60e01b145b806103f257506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461040790611489565b80601f016020809104026020016040519081016040528092919081815260200182805461043390611489565b80156104805780601f1061045557610100808354040283529160200191610480565b820191906000526020600020905b81548152906001019060200180831161046357829003601f168201915b5050505050905090565b600061049582610908565b506000908152600460205260409020546001600160a01b031690565b60006104bc82610672565b9050806001600160a01b0316836001600160a01b03160361052e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061054a575061054a81336108da565b6105bc5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610525565b6105c6838361096a565b505050565b6105d4816109d8565b6007546040516001600160a01b0384169180156108fc02916000818181858888f193505050501580156105c6573d6000803e3d6000fd5b6106153382610a7b565b6106315760405162461bcd60e51b8152600401610525906114c3565b6105c6838383610ada565b6105c683838360405180602001604052806000815250610776565b6105c683838360405180602001604052806000815250610c4b565b6000818152600260205260408120546001600160a01b0316806103f25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610525565b60006001600160a01b03821661073c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610525565b506001600160a01b031660009081526003602052604090205490565b60606001805461040790611489565b610772338383610c7e565b5050565b6107803383610a7b565b61079c5760405162461bcd60e51b8152600401610525906114c3565b6107a884848484610c4b565b50505050565b60606107b982610908565b60006107d060408051602081019091526000815290565b905060008151116107f0576040518060200160405280600081525061081b565b806107fa84610d4c565b60405160200161080b929190611510565b6040516020818303038152906040525b9392505050565b600060075434101561086b5760405162461bcd60e51b8152602060048201526012602482015271496e73756669636369656e742066756e647360701b6044820152606401610525565b610879600680546001019055565b600061088460065490565b90506108908382610ddf565b826001600160a01b03166108fc600754346108ab9190611555565b6040518115909202916000818181858888f193505050501580156108d3573d6000803e3d6000fd5b5092915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166109675760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610525565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061099f82610672565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006109e382610672565b90506109f3816000846001610f78565b6109fc82610672565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080610a8783610672565b9050806001600160a01b0316846001600160a01b03161480610aae5750610aae81856108da565b80610ad25750836001600160a01b0316610ac78461048a565b6001600160a01b0316145b949350505050565b826001600160a01b0316610aed82610672565b6001600160a01b031614610b135760405162461bcd60e51b815260040161052590611568565b6001600160a01b038216610b755760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610525565b610b828383836001610f78565b826001600160a01b0316610b9582610672565b6001600160a01b031614610bbb5760405162461bcd60e51b815260040161052590611568565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610c56848484610ada565b610c6284848484611000565b6107a85760405162461bcd60e51b8152600401610525906115ad565b816001600160a01b0316836001600160a01b031603610cdf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610525565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606000610d5983611101565b600101905060008167ffffffffffffffff811115610d7957610d79611365565b6040519080825280601f01601f191660200182016040528015610da3576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610dad57509392505050565b6001600160a01b038216610e355760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610525565b6000818152600260205260409020546001600160a01b031615610e9a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610525565b610ea8600083836001610f78565b6000818152600260205260409020546001600160a01b031615610f0d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610525565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60018111156107a8576001600160a01b03841615610fbe576001600160a01b03841660009081526003602052604081208054839290610fb8908490611555565b90915550505b6001600160a01b038316156107a8576001600160a01b03831660009081526003602052604081208054839290610ff59084906115ff565b909155505050505050565b60006001600160a01b0384163b156110f657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611044903390899088908890600401611612565b6020604051808303816000875af192505050801561107f575060408051601f3d908101601f1916820190925261107c9181019061164f565b60015b6110dc573d8080156110ad576040519150601f19603f3d011682016040523d82523d6000602084013e6110b2565b606091505b5080516000036110d45760405162461bcd60e51b8152600401610525906115ad565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ad2565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111405772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061116c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061118a57662386f26fc10000830492506010015b6305f5e10083106111a2576305f5e100830492506008015b61271083106111b657612710830492506004015b606483106111c8576064830492506002015b600a83106103f25760010192915050565b6001600160e01b03198116811461096757600080fd5b60006020828403121561120157600080fd5b813561081b816111d9565b60005b8381101561122757818101518382015260200161120f565b50506000910152565b6000815180845261124881602086016020860161120c565b601f01601f19169290920160200192915050565b60208152600061081b6020830184611230565b60006020828403121561128157600080fd5b5035919050565b6001600160a01b038116811461096757600080fd5b600080604083850312156112b057600080fd5b82356112bb81611288565b946020939093013593505050565b6000806000606084860312156112de57600080fd5b83356112e981611288565b925060208401356112f981611288565b929592945050506040919091013590565b60006020828403121561131c57600080fd5b813561081b81611288565b6000806040838503121561133a57600080fd5b823561134581611288565b91506020830135801515811461135a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561139157600080fd5b843561139c81611288565b935060208501356113ac81611288565b925060408501359150606085013567ffffffffffffffff808211156113d057600080fd5b818701915087601f8301126113e457600080fd5b8135818111156113f6576113f6611365565b604051601f8201601f19908116603f0116810190838211818310171561141e5761141e611365565b816040528281528a602084870101111561143757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561146e57600080fd5b823561147981611288565b9150602083013561135a81611288565b600181811c9082168061149d57607f821691505b6020821081036114bd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161152281846020880161120c565b83519083019061153681836020880161120c565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103f2576103f261153f565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b808201808211156103f2576103f261153f565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061164590830184611230565b9695505050505050565b60006020828403121561166157600080fd5b815161081b816111d956fea2646970667358221220daa9406ce9f0bc2fbcb5b2c81fad8a35b297b81d676bf49abeff31afab8f7b6964736f6c63430008110033",
    "sourceMap": "353:2104:26:-:0;;;732:136;;;;;;;;;;1390:113:14;;;;;;;;;;;;;-1:-1:-1;;;1390:113:14;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:14;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:14;:17;1489:7;1479;:17;:::i;:::-;-1:-1:-1;;850:10:26::1;838:9;:22:::0;-1:-1:-1;353:2104:26;;14:127:30;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:30;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:30;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:30;;;2580:26;2531:89;-1:-1:-1;;1335:1:30;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:30;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:30;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:30;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:30:o;:::-;353:2104:26;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101025760003560e01c80636352211e11610095578063b88d4fde11610064578063b88d4fde1461031d578063c7876ea41461033d578063c87b56dd14610353578063dd62b03914610373578063e985e9c51461038657600080fd5b80636352211e1461029a57806370a08231146102ba57806395d89b41146102e8578063a22cb465146102fd57600080fd5b8063096c5e1a116100d1578063096c5e1a1461021a57806323b872dd1461023a57806342842e0e1461025a5780636295c61a1461027a57600080fd5b806301ffc9a71461016957806306fdde031461019e578063081812fc146101c0578063095ea7b3146101f857600080fd5b36610164577fdd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b55a60405161015a91906040808252600790820152667265636569766560c81b6060820152602081019190915260800190565b60405180910390a1005b600080fd5b34801561017557600080fd5b506101896101843660046111ef565b6103a6565b60405190151581526020015b60405180910390f35b3480156101aa57600080fd5b506101b36103f8565b604051610195919061125c565b3480156101cc57600080fd5b506101e06101db36600461126f565b61048a565b6040516001600160a01b039091168152602001610195565b34801561020457600080fd5b5061021861021336600461129d565b6104b1565b005b34801561022657600080fd5b5061021861023536600461129d565b6105cb565b34801561024657600080fd5b506102186102553660046112c9565b61060b565b34801561026657600080fd5b506102186102753660046112c9565b61063c565b34801561028657600080fd5b506102186102953660046112c9565b610657565b3480156102a657600080fd5b506101e06102b536600461126f565b610672565b3480156102c657600080fd5b506102da6102d536600461130a565b6106d2565b604051908152602001610195565b3480156102f457600080fd5b506101b3610758565b34801561030957600080fd5b50610218610318366004611327565b610767565b34801561032957600080fd5b5061021861033836600461137b565b610776565b34801561034957600080fd5b506102da60075481565b34801561035f57600080fd5b506101b361036e36600461126f565b6107ae565b6102da61038136600461130a565b610822565b34801561039257600080fd5b506101896103a136600461145b565b6108da565b60006001600160e01b031982166380ac58cd60e01b14806103d757506001600160e01b03198216635b5e139f60e01b145b806103f257506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461040790611489565b80601f016020809104026020016040519081016040528092919081815260200182805461043390611489565b80156104805780601f1061045557610100808354040283529160200191610480565b820191906000526020600020905b81548152906001019060200180831161046357829003601f168201915b5050505050905090565b600061049582610908565b506000908152600460205260409020546001600160a01b031690565b60006104bc82610672565b9050806001600160a01b0316836001600160a01b03160361052e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061054a575061054a81336108da565b6105bc5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610525565b6105c6838361096a565b505050565b6105d4816109d8565b6007546040516001600160a01b0384169180156108fc02916000818181858888f193505050501580156105c6573d6000803e3d6000fd5b6106153382610a7b565b6106315760405162461bcd60e51b8152600401610525906114c3565b6105c6838383610ada565b6105c683838360405180602001604052806000815250610776565b6105c683838360405180602001604052806000815250610c4b565b6000818152600260205260408120546001600160a01b0316806103f25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610525565b60006001600160a01b03821661073c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610525565b506001600160a01b031660009081526003602052604090205490565b60606001805461040790611489565b610772338383610c7e565b5050565b6107803383610a7b565b61079c5760405162461bcd60e51b8152600401610525906114c3565b6107a884848484610c4b565b50505050565b60606107b982610908565b60006107d060408051602081019091526000815290565b905060008151116107f0576040518060200160405280600081525061081b565b806107fa84610d4c565b60405160200161080b929190611510565b6040516020818303038152906040525b9392505050565b600060075434101561086b5760405162461bcd60e51b8152602060048201526012602482015271496e73756669636369656e742066756e647360701b6044820152606401610525565b610879600680546001019055565b600061088460065490565b90506108908382610ddf565b826001600160a01b03166108fc600754346108ab9190611555565b6040518115909202916000818181858888f193505050501580156108d3573d6000803e3d6000fd5b5092915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166109675760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610525565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061099f82610672565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006109e382610672565b90506109f3816000846001610f78565b6109fc82610672565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080610a8783610672565b9050806001600160a01b0316846001600160a01b03161480610aae5750610aae81856108da565b80610ad25750836001600160a01b0316610ac78461048a565b6001600160a01b0316145b949350505050565b826001600160a01b0316610aed82610672565b6001600160a01b031614610b135760405162461bcd60e51b815260040161052590611568565b6001600160a01b038216610b755760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610525565b610b828383836001610f78565b826001600160a01b0316610b9582610672565b6001600160a01b031614610bbb5760405162461bcd60e51b815260040161052590611568565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610c56848484610ada565b610c6284848484611000565b6107a85760405162461bcd60e51b8152600401610525906115ad565b816001600160a01b0316836001600160a01b031603610cdf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610525565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606000610d5983611101565b600101905060008167ffffffffffffffff811115610d7957610d79611365565b6040519080825280601f01601f191660200182016040528015610da3576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610dad57509392505050565b6001600160a01b038216610e355760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610525565b6000818152600260205260409020546001600160a01b031615610e9a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610525565b610ea8600083836001610f78565b6000818152600260205260409020546001600160a01b031615610f0d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610525565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60018111156107a8576001600160a01b03841615610fbe576001600160a01b03841660009081526003602052604081208054839290610fb8908490611555565b90915550505b6001600160a01b038316156107a8576001600160a01b03831660009081526003602052604081208054839290610ff59084906115ff565b909155505050505050565b60006001600160a01b0384163b156110f657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611044903390899088908890600401611612565b6020604051808303816000875af192505050801561107f575060408051601f3d908101601f1916820190925261107c9181019061164f565b60015b6110dc573d8080156110ad576040519150601f19603f3d011682016040523d82523d6000602084013e6110b2565b606091505b5080516000036110d45760405162461bcd60e51b8152600401610525906115ad565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ad2565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111405772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061116c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061118a57662386f26fc10000830492506010015b6305f5e10083106111a2576305f5e100830492506008015b61271083106111b657612710830492506004015b606483106111c8576064830492506002015b600a83106103f25760010192915050565b6001600160e01b03198116811461096757600080fd5b60006020828403121561120157600080fd5b813561081b816111d9565b60005b8381101561122757818101518382015260200161120f565b50506000910152565b6000815180845261124881602086016020860161120c565b601f01601f19169290920160200192915050565b60208152600061081b6020830184611230565b60006020828403121561128157600080fd5b5035919050565b6001600160a01b038116811461096757600080fd5b600080604083850312156112b057600080fd5b82356112bb81611288565b946020939093013593505050565b6000806000606084860312156112de57600080fd5b83356112e981611288565b925060208401356112f981611288565b929592945050506040919091013590565b60006020828403121561131c57600080fd5b813561081b81611288565b6000806040838503121561133a57600080fd5b823561134581611288565b91506020830135801515811461135a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561139157600080fd5b843561139c81611288565b935060208501356113ac81611288565b925060408501359150606085013567ffffffffffffffff808211156113d057600080fd5b818701915087601f8301126113e457600080fd5b8135818111156113f6576113f6611365565b604051601f8201601f19908116603f0116810190838211818310171561141e5761141e611365565b816040528281528a602084870101111561143757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561146e57600080fd5b823561147981611288565b9150602083013561135a81611288565b600181811c9082168061149d57607f821691505b6020821081036114bd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161152281846020880161120c565b83519083019061153681836020880161120c565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103f2576103f261153f565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b808201808211156103f2576103f261153f565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061164590830184611230565b9695505050505050565b60006020828403121561166157600080fd5b815161081b816111d956fea2646970667358221220daa9406ce9f0bc2fbcb5b2c81fad8a35b297b81d676bf49abeff31afab8f7b6964736f6c63430008110033",
    "sourceMap": "353:2104:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:25;2438:9;2423:25;;;;;244:2:30;226:21;;;283:1;263:18;;;256:29;-1:-1:-1;;;316:2:30;301:18;;294:37;398:4;383:20;;376:36;;;;363:3;348:19;;14:404;2423:25:26;;;;;;;;353:2104;;;;;1570:300:14;;;;;;;;;;-1:-1:-1;1570:300:14;;;;;:::i;:::-;;:::i;:::-;;;974:14:30;;967:22;949:41;;937:2;922:18;1570:300:14;;;;;;;;2471:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;;;;;-1:-1:-1;3935:167:14;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2106:32:30;;;2088:51;;2076:2;2061:18;3935:167:14;1942:203:30;3468:406:14;;;;;;;;;;-1:-1:-1;3468:406:14;;;;;:::i;:::-;;:::i;:::-;;1731:263:26;;;;;;;;;;-1:-1:-1;1731:263:26;;;;;:::i;:::-;;:::i;4612:296:14:-;;;;;;;;;;-1:-1:-1;4612:296:14;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;;;;;-1:-1:-1;4974:149:14;;;;;:::i;:::-;;:::i;2235:124:26:-;;;;;;;;;;-1:-1:-1;2235:124:26;;;;;:::i;:::-;;:::i;2190:219:14:-;;;;;;;;;;-1:-1:-1;2190:219:14;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;;;;;-1:-1:-1;1929:204:14;;;;;:::i;:::-;;:::i;:::-;;;3793:25:30;;;3781:2;3766:18;1929:204:14;3647:177:30;2633:102:14;;;;;;;;;;;;;:::i;4169:153::-;;;;;;;;;;-1:-1:-1;4169:153:14;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;;;;;-1:-1:-1;5189:276:14;;;;;:::i;:::-;;:::i;607:21:26:-;;;;;;;;;;;;;;;;2801:276:14;;;;;;;;;;-1:-1:-1;2801:276:14;;;;;:::i;:::-;;:::i;1045:487:26:-;;;;;;:::i;:::-;;:::i;4388:162:14:-;;;;;;;;;;-1:-1:-1;4388:162:14;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:14;;-1:-1:-1;;;1707:40:14;;:104;;-1:-1:-1;;;;;;;1763:48:14;;-1:-1:-1;;;1763:48:14;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:22;;;1827:36:14;1688:175;1570:300;-1:-1:-1;;1570:300:14:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:14;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:14;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:14;:2;-1:-1:-1;;;;;3605:11:14;;3597:57;;;;-1:-1:-1;;;3597:57:14;;6893:2:30;3597:57:14;;;6875:21:30;6932:2;6912:18;;;6905:30;6971:34;6951:18;;;6944:62;-1:-1:-1;;;7022:18:30;;;7015:31;7063:19;;3597:57:14;;;;;;;;;719:10:19;-1:-1:-1;;;;;3686:21:14;;;;:62;;-1:-1:-1;3711:37:14;3728:5;719:10:19;4388:162:14;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:14;;7295:2:30;3665:170:14;;;7277:21:30;7334:2;7314:18;;;7307:30;7373:34;7353:18;;;7346:62;7444:31;7424:18;;;7417:59;7493:19;;3665:170:14;7093:425:30;3665:170:14;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;1731:263:26:-;1891:14;1897:7;1891:5;:14::i;:::-;1977:9;;1961:26;;-1:-1:-1;;;;;1961:15:26;;;:26;;;;;;;;;1977:9;1961:15;:26;;;;;;;;;;;;;;;;;;;4612:296:14;4771:41;719:10:19;4804:7:14;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:14;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2235:124:26:-;2316:36;2330:4;2336:2;2340:7;2316:36;;;;;;;;;;;;:13;:36::i;2190:219:14:-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:14;;2324:56;;;;-1:-1:-1;;;2324:56:14;;8139:2:30;2324:56:14;;;8121:21:30;8178:2;8158:18;;;8151:30;-1:-1:-1;;;8197:18:30;;;8190:54;8261:18;;2324:56:14;7937:348:30;1929:204:14;2001:7;-1:-1:-1;;;;;2028:19:14;;2020:73;;;;-1:-1:-1;;;2020:73:14;;8492:2:30;2020:73:14;;;8474:21:30;8531:2;8511:18;;;8504:30;8570:34;8550:18;;;8543:62;-1:-1:-1;;;8621:18:30;;;8614:39;8670:19;;2020:73:14;8290:405:30;2020:73:14;-1:-1:-1;;;;;;2110:16:14;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:19;4296:8:14;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:19;5352:7:14;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:14;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:14;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:14:o;1045:487:26:-;1108:7;1214:9;;1201;:22;;1193:53;;;;-1:-1:-1;;;1193:53:26;;9403:2:30;1193:53:26;;;9385:21:30;9442:2;9422:18;;;9415:30;-1:-1:-1;;;9461:18:30;;;9454:48;9519:18;;1193:53:26;9201:342:30;1193:53:26;1305:21;:9;1032:19:20;;1050:1;1032:19;;;945:123;1305:21:26;1336:17;1356:19;:9;918:14:20;;827:112;1356:19:26;1336:39;;1385:23;1391:5;1398:9;1385:5;:23::i;:::-;1464:5;-1:-1:-1;;;;;1464:14:26;:35;1489:9;;1479;:19;;;;:::i;:::-;1464:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1516:9:26;1045:487;-1:-1:-1;;1045:487:26:o;4388:162:14:-;-1:-1:-1;;;;;4508:25:14;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:14;13313:53;;;;-1:-1:-1;;;13313:53:14;;8139:2:30;13313:53:14;;;8121:21:30;8178:2;8158:18;;;8151:30;-1:-1:-1;;;8197:18:30;;;8190:54;8261:18;;13313:53:14;7937:348:30;13313:53:14;13240:133;:::o;12572:171::-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:14;-1:-1:-1;;;;;12646:29:14;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:14;;;;;;;;;;;12572:171;;:::o;10171:762::-;10230:13;10246:23;10261:7;10246:14;:23::i;:::-;10230:39;;10280:51;10301:5;10316:1;10320:7;10329:1;10280:20;:51::i;:::-;10441:23;10456:7;10441:14;:23::i;:::-;10509:24;;;;:15;:24;;;;;;;;10502:31;;-1:-1:-1;;;;;;10502:31:14;;;;;;-1:-1:-1;;;;;10749:16:14;;;;;:9;:16;;;;;:21;;-1:-1:-1;;10749:21:14;;;10797:16;;;:7;:16;;;;;;10790:23;;;;;;;10829:36;10433:31;;-1:-1:-1;10525:7:14;;10829:36;;10509:24;;10829:36;4169:153;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:14;:7;-1:-1:-1;;;;;7570:16:14;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:14;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:14;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:14:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:14;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:14;;11346:81;;;;-1:-1:-1;;;11346:81:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:14;;11437:65;;;;-1:-1:-1;;;11437:65:14;;10421:2:30;11437:65:14;;;10403:21:30;10460:2;10440:18;;;10433:30;10499:34;10479:18;;;10472:62;-1:-1:-1;;;10550:18:30;;;10543:34;10594:19;;11437:65:14;10219:400:30;11437:65:14;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;-1:-1:-1;;;;;11655:31:14;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:14;;11647:81;;;;-1:-1:-1;;;11647:81:14;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:14;;;;;;-1:-1:-1;;;;;12265:15:14;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:14;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:14;;;;;;;:::i;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:14;:5;-1:-1:-1;;;;;12990:17:14;;12982:55;;;;-1:-1:-1;;;12982:55:14;;11245:2:30;12982:55:14;;;11227:21:30;11284:2;11264:18;;;11257:30;11323:27;11303:18;;;11296:55;11368:18;;12982:55:14;11043:349:30;12982:55:14;-1:-1:-1;;;;;13047:25:14;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:14;;;;;;;;;;13108:41;;949::30;;;13108::14;;922:18:30;13108:41:14;;;;;;;12879:277;;;:::o;447:696:21:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:21;-1:-1:-1;604:41:21;-1:-1:-1;765:28:21;;;781:2;765:28;820:280;-1:-1:-1;;851:5:21;-1:-1:-1;;;985:2:21;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:21;820:280;1064:21;-1:-1:-1;1120:6:21;447:696;-1:-1:-1;;;447:696:21:o;8925:920:14:-;-1:-1:-1;;;;;9004:16:14;;8996:61;;;;-1:-1:-1;;;8996:61:14;;11731:2:30;8996:61:14;;;11713:21:30;;;11750:18;;;11743:30;11809:34;11789:18;;;11782:62;11861:18;;8996:61:14;11529:356:30;8996:61:14;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:14;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:14;;12092:2:30;9067:58:14;;;12074:21:30;12131:2;12111:18;;;12104:30;12170;12150:18;;;12143:58;12218:18;;9067:58:14;11890:352:30;9067:58:14;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:14;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:14;;12092:2:30;9271:58:14;;;12074:21:30;12131:2;12111:18;;;12104:30;12170;12150:18;;;12143:58;12218:18;;9271:58:14;11890:352:30;9271:58:14;-1:-1:-1;;;;;9671:13:14;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:14;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;15472:396::-;15656:1;15644:9;:13;15640:222;;;-1:-1:-1;;;;;15677:18:14;;;15673:85;;-1:-1:-1;;;;;15715:15:14;;;;;;:9;:15;;;;;:28;;15734:9;;15715:15;:28;;15734:9;;15715:28;:::i;:::-;;;;-1:-1:-1;;15673:85:14;-1:-1:-1;;;;;15775:16:14;;;15771:81;;-1:-1:-1;;;;;15811:13:14;;;;;;:9;:13;;;;;:26;;15828:9;;15811:13;:26;;15828:9;;15811:26;:::i;:::-;;;;-1:-1:-1;;15472:396:14;;;;:::o;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:14;;1702:19:18;:23;14090:660:14;;14129:71;;-1:-1:-1;;;14129:71:14;;-1:-1:-1;;;;;14129:36:14;;;;;:71;;719:10:19;;14180:4:14;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:14;;;;;;;;-1:-1:-1;;14129:71:14;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:14;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:14;-1:-1:-1;;;14250:51:14;;-1:-1:-1;14243:58:14;;14090:660;-1:-1:-1;14735:4:14;13925:831;;;;;;:::o;9846:916:24:-;9899:7;;-1:-1:-1;;;9974:17:24;;9970:103;;-1:-1:-1;;;10011:17:24;;;-1:-1:-1;10056:2:24;10046:12;9970:103;10099:8;10090:5;:17;10086:103;;10136:8;10127:17;;;-1:-1:-1;10172:2:24;10162:12;10086:103;10215:8;10206:5;:17;10202:103;;10252:8;10243:17;;;-1:-1:-1;10288:2:24;10278:12;10202:103;10331:7;10322:5;:16;10318:100;;10367:7;10358:16;;;-1:-1:-1;10402:1:24;10392:11;10318:100;10444:7;10435:5;:16;10431:100;;10480:7;10471:16;;;-1:-1:-1;10515:1:24;10505:11;10431:100;10557:7;10548:5;:16;10544:100;;10593:7;10584:16;;;-1:-1:-1;10628:1:24;10618:11;10544:100;10670:7;10661:5;:16;10657:66;;10707:1;10697:11;10749:6;9846:916;-1:-1:-1;;9846:916:24:o;423:131:30:-;-1:-1:-1;;;;;;497:32:30;;487:43;;477:71;;544:1;541;534:12;559:245;617:6;670:2;658:9;649:7;645:23;641:32;638:52;;;686:1;683;676:12;638:52;725:9;712:23;744:30;768:5;744:30;:::i;1001:250::-;1086:1;1096:113;1110:6;1107:1;1104:13;1096:113;;;1186:11;;;1180:18;1167:11;;;1160:39;1132:2;1125:10;1096:113;;;-1:-1:-1;;1243:1:30;1225:16;;1218:27;1001:250::o;1256:271::-;1298:3;1336:5;1330:12;1363:6;1358:3;1351:19;1379:76;1448:6;1441:4;1436:3;1432:14;1425:4;1418:5;1414:16;1379:76;:::i;:::-;1509:2;1488:15;-1:-1:-1;;1484:29:30;1475:39;;;;1516:4;1471:50;;1256:271;-1:-1:-1;;1256:271:30:o;1532:220::-;1681:2;1670:9;1663:21;1644:4;1701:45;1742:2;1731:9;1727:18;1719:6;1701:45;:::i;1757:180::-;1816:6;1869:2;1857:9;1848:7;1844:23;1840:32;1837:52;;;1885:1;1882;1875:12;1837:52;-1:-1:-1;1908:23:30;;1757:180;-1:-1:-1;1757:180:30:o;2150:131::-;-1:-1:-1;;;;;2225:31:30;;2215:42;;2205:70;;2271:1;2268;2261:12;2286:315;2354:6;2362;2415:2;2403:9;2394:7;2390:23;2386:32;2383:52;;;2431:1;2428;2421:12;2383:52;2470:9;2457:23;2489:31;2514:5;2489:31;:::i;:::-;2539:5;2591:2;2576:18;;;;2563:32;;-1:-1:-1;;;2286:315:30:o;2934:456::-;3011:6;3019;3027;3080:2;3068:9;3059:7;3055:23;3051:32;3048:52;;;3096:1;3093;3086:12;3048:52;3135:9;3122:23;3154:31;3179:5;3154:31;:::i;:::-;3204:5;-1:-1:-1;3261:2:30;3246:18;;3233:32;3274:33;3233:32;3274:33;:::i;:::-;2934:456;;3326:7;;-1:-1:-1;;;3380:2:30;3365:18;;;;3352:32;;2934:456::o;3395:247::-;3454:6;3507:2;3495:9;3486:7;3482:23;3478:32;3475:52;;;3523:1;3520;3513:12;3475:52;3562:9;3549:23;3581:31;3606:5;3581:31;:::i;3829:416::-;3894:6;3902;3955:2;3943:9;3934:7;3930:23;3926:32;3923:52;;;3971:1;3968;3961:12;3923:52;4010:9;3997:23;4029:31;4054:5;4029:31;:::i;:::-;4079:5;-1:-1:-1;4136:2:30;4121:18;;4108:32;4178:15;;4171:23;4159:36;;4149:64;;4209:1;4206;4199:12;4149:64;4232:7;4222:17;;;3829:416;;;;;:::o;4250:127::-;4311:10;4306:3;4302:20;4299:1;4292:31;4342:4;4339:1;4332:15;4366:4;4363:1;4356:15;4382:1266;4477:6;4485;4493;4501;4554:3;4542:9;4533:7;4529:23;4525:33;4522:53;;;4571:1;4568;4561:12;4522:53;4610:9;4597:23;4629:31;4654:5;4629:31;:::i;:::-;4679:5;-1:-1:-1;4736:2:30;4721:18;;4708:32;4749:33;4708:32;4749:33;:::i;:::-;4801:7;-1:-1:-1;4855:2:30;4840:18;;4827:32;;-1:-1:-1;4910:2:30;4895:18;;4882:32;4933:18;4963:14;;;4960:34;;;4990:1;4987;4980:12;4960:34;5028:6;5017:9;5013:22;5003:32;;5073:7;5066:4;5062:2;5058:13;5054:27;5044:55;;5095:1;5092;5085:12;5044:55;5131:2;5118:16;5153:2;5149;5146:10;5143:36;;;5159:18;;:::i;:::-;5234:2;5228:9;5202:2;5288:13;;-1:-1:-1;;5284:22:30;;;5308:2;5280:31;5276:40;5264:53;;;5332:18;;;5352:22;;;5329:46;5326:72;;;5378:18;;:::i;:::-;5418:10;5414:2;5407:22;5453:2;5445:6;5438:18;5493:7;5488:2;5483;5479;5475:11;5471:20;5468:33;5465:53;;;5514:1;5511;5504:12;5465:53;5570:2;5565;5561;5557:11;5552:2;5544:6;5540:15;5527:46;5615:1;5610:2;5605;5597:6;5593:15;5589:24;5582:35;5636:6;5626:16;;;;;;;4382:1266;;;;;;;:::o;5913:388::-;5981:6;5989;6042:2;6030:9;6021:7;6017:23;6013:32;6010:52;;;6058:1;6055;6048:12;6010:52;6097:9;6084:23;6116:31;6141:5;6116:31;:::i;:::-;6166:5;-1:-1:-1;6223:2:30;6208:18;;6195:32;6236:33;6195:32;6236:33;:::i;6306:380::-;6385:1;6381:12;;;;6428;;;6449:61;;6503:4;6495:6;6491:17;6481:27;;6449:61;6556:2;6548:6;6545:14;6525:18;6522:38;6519:161;;6602:10;6597:3;6593:20;6590:1;6583:31;6637:4;6634:1;6627:15;6665:4;6662:1;6655:15;6519:161;;6306:380;;;:::o;7523:409::-;7725:2;7707:21;;;7764:2;7744:18;;;7737:30;7803:34;7798:2;7783:18;;7776:62;-1:-1:-1;;;7869:2:30;7854:18;;7847:43;7922:3;7907:19;;7523:409::o;8700:496::-;8879:3;8917:6;8911:13;8933:66;8992:6;8987:3;8980:4;8972:6;8968:17;8933:66;:::i;:::-;9062:13;;9021:16;;;;9084:70;9062:13;9021:16;9131:4;9119:17;;9084:70;:::i;:::-;9170:20;;8700:496;-1:-1:-1;;;;8700:496:30:o;9548:127::-;9609:10;9604:3;9600:20;9597:1;9590:31;9640:4;9637:1;9630:15;9664:4;9661:1;9654:15;9680:128;9747:9;;;9768:11;;;9765:37;;;9782:18;;:::i;9813:401::-;10015:2;9997:21;;;10054:2;10034:18;;;10027:30;10093:34;10088:2;10073:18;;10066:62;-1:-1:-1;;;10159:2:30;10144:18;;10137:35;10204:3;10189:19;;9813:401::o;10624:414::-;10826:2;10808:21;;;10865:2;10845:18;;;10838:30;10904:34;10899:2;10884:18;;10877:62;-1:-1:-1;;;10970:2:30;10955:18;;10948:48;11028:3;11013:19;;10624:414::o;12247:125::-;12312:9;;;12333:10;;;12330:36;;;12346:18;;:::i;12377:489::-;-1:-1:-1;;;;;12646:15:30;;;12628:34;;12698:15;;12693:2;12678:18;;12671:43;12745:2;12730:18;;12723:34;;;12793:3;12788:2;12773:18;;12766:31;;;12571:4;;12814:46;;12840:19;;12832:6;12814:46;:::i;:::-;12806:54;12377:489;-1:-1:-1;;;;;;12377:489:30:o;12871:249::-;12940:6;12993:2;12981:9;12972:7;12968:23;12964:32;12961:52;;;13009:1;13006;12999:12;12961:52;13041:9;13035:16;13060:30;13084:5;13060:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "basePrice()": "c7876ea4",
    "buyItem(address)": "dd62b039",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "sellItem(address,uint256)": "096c5e1a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferItem(address,address,uint256)": "6295c61a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"buyItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"sellItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"transferItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Carolina P.\",\"details\":\"Tests still need to be written\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"buyItem(address)\":{\"params\":{\"buyer\":\"The address of the buyer of the NFT\"},\"returns\":{\"_0\":\"newItemID ID of the token bought\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"sellItem(address,uint256)\":{\"params\":{\"seller\":\"The address of the seller of the NFT\",\"tokenID\":\"TokenID of the NFT to be sold\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferItem(address,address,uint256)\":{\"params\":{\"from\":\"The address of the owner of the NFT\",\"to\":\"The address of the recipient of the NFT\",\"tokenID\":\"TokenID of the NFT to be sold\"}}},\"title\":\"ThreeSigmaNFT ME:C7\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyItem(address)\":{\"notice\":\"Allows to buy an NFT if enough ether is provided\"},\"constructor\":{\"notice\":\"Initializes the contract by setting a name and a symbol to the token collection.\"},\"sellItem(address,uint256)\":{\"notice\":\"Allows to sell an NFT for the base price, the NFT is then burned\"},\"transferItem(address,address,uint256)\":{\"notice\":\"Allows to transfer a NFT from an adress to another\"}},\"notice\":\"Contract used to deploy a basic NFT \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ThreeSigmaNFT.sol\":\"ThreeSigmaNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5b58c0def48629fb952407199c42b974af2c49cf554a5027312df3fbf05eec28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8975ab7fbe6959fe74eadf37be878879b87027541edcc97a88bfe44daf124410\",\"dweb:/ipfs/QmcSMJaQyBKCkVMJU1tzh3pwgzLx1oKtUBr2BJq3hHy1Zn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a\",\"dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/ThreeSigmaNFT.sol\":{\"keccak256\":\"0x8aa28f7635455383e220c7036a10da1e65381ec72495ace6eda978c22c33eb1e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://62abfaad9af9e9aed2171557222cc5c4dc09389e390aebb5a48486fd6af18401\",\"dweb:/ipfs/Qmde2FTCJuoSnexFBtjYnC6cvekUQsnbNx5EiPeeJzggBy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "func",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "basePrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyItem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenID",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sellItem"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenID",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferItem"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "buyItem(address)": {
            "params": {
              "buyer": "The address of the buyer of the NFT"
            },
            "returns": {
              "_0": "newItemID ID of the token bought"
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "sellItem(address,uint256)": {
            "params": {
              "seller": "The address of the seller of the NFT",
              "tokenID": "TokenID of the NFT to be sold"
            }
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferItem(address,address,uint256)": {
            "params": {
              "from": "The address of the owner of the NFT",
              "to": "The address of the recipient of the NFT",
              "tokenID": "TokenID of the NFT to be sold"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyItem(address)": {
            "notice": "Allows to buy an NFT if enough ether is provided"
          },
          "constructor": {
            "notice": "Initializes the contract by setting a name and a symbol to the token collection."
          },
          "sellItem(address,uint256)": {
            "notice": "Allows to sell an NFT for the base price, the NFT is then burned"
          },
          "transferItem(address,address,uint256)": {
            "notice": "Allows to transfer a NFT from an adress to another"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ThreeSigmaNFT.sol": "ThreeSigmaNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x5b58c0def48629fb952407199c42b974af2c49cf554a5027312df3fbf05eec28",
        "urls": [
          "bzz-raw://8975ab7fbe6959fe74eadf37be878879b87027541edcc97a88bfe44daf124410",
          "dweb:/ipfs/QmcSMJaQyBKCkVMJU1tzh3pwgzLx1oKtUBr2BJq3hHy1Zn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886",
        "urls": [
          "bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a",
          "dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41",
        "urls": [
          "bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903",
          "dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/ThreeSigmaNFT.sol": {
        "keccak256": "0x8aa28f7635455383e220c7036a10da1e65381ec72495ace6eda978c22c33eb1e",
        "urls": [
          "bzz-raw://62abfaad9af9e9aed2171557222cc5c4dc09389e390aebb5a48486fd6af18401",
          "dweb:/ipfs/Qmde2FTCJuoSnexFBtjYnC6cvekUQsnbNx5EiPeeJzggBy"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ThreeSigmaNFT.sol",
    "id": 28371,
    "exportedSymbols": {
      "Address": [
        26911
      ],
      "Context": [
        26933
      ],
      "Counters": [
        27007
      ],
      "ERC165": [
        27260
      ],
      "ERC721": [
        26420
      ],
      "IERC165": [
        27272
      ],
      "IERC721": [
        26536
      ],
      "IERC721Metadata": [
        26581
      ],
      "IERC721Receiver": [
        26554
      ],
      "Math": [
        28138
      ],
      "SignedMath": [
        28243
      ],
      "Strings": [
        27236
      ],
      "ThreeSigmaNFT": [
        28370
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2418:26",
    "nodes": [
      {
        "id": 28245,
        "nodeType": "PragmaDirective",
        "src": "39:24:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 28246,
        "nodeType": "ImportDirective",
        "src": "65:73:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28371,
        "sourceUnit": 26421,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28247,
        "nodeType": "ImportDirective",
        "src": "139:68:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "file": "../lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28371,
        "sourceUnit": 27008,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28370,
        "nodeType": "ContractDefinition",
        "src": "353:2104:26",
        "nodes": [
          {
            "id": 28256,
            "nodeType": "EventDefinition",
            "src": "417:33:26",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "dd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b5",
            "name": "Log",
            "nameLocation": "423:3:26",
            "parameters": {
              "id": 28255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28252,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "func",
                  "nameLocation": "434:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 28256,
                  "src": "427:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28251,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gas",
                  "nameLocation": "445:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 28256,
                  "src": "440:8:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28253,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "426:23:26"
            }
          },
          {
            "id": 28260,
            "nodeType": "UsingForDirective",
            "src": "490:36:26",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 28257,
              "name": "Counters",
              "nameLocations": [
                "496:8:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27007,
              "src": "496:8:26"
            },
            "typeName": {
              "id": 28259,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28258,
                "name": "Counters.Counter",
                "nameLocations": [
                  "509:8:26",
                  "518:7:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26939,
                "src": "509:16:26"
              },
              "referencedDeclaration": 26939,
              "src": "509:16:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$26939_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 28263,
            "nodeType": "VariableDeclaration",
            "src": "531:34:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "556:9:26",
            "scope": 28370,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$26939_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 28262,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28261,
                "name": "Counters.Counter",
                "nameLocations": [
                  "531:8:26",
                  "540:7:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26939,
                "src": "531:16:26"
              },
              "referencedDeclaration": 26939,
              "src": "531:16:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$26939_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 28265,
            "nodeType": "VariableDeclaration",
            "src": "607:21:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "c7876ea4",
            "mutability": "mutable",
            "name": "basePrice",
            "nameLocation": "619:9:26",
            "scope": 28370,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28264,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "607:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28278,
            "nodeType": "FunctionDefinition",
            "src": "732:136:26",
            "nodes": [],
            "body": {
              "id": 28277,
              "nodeType": "Block",
              "src": "777:91:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 28275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28273,
                      "name": "basePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28265,
                      "src": "838:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "302e3031",
                      "id": 28274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "850:10:26",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000_by_1",
                        "typeString": "int_const 10000000000000000"
                      },
                      "value": "0.01"
                    },
                    "src": "838:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28276,
                  "nodeType": "ExpressionStatement",
                  "src": "838:22:26"
                }
              ]
            },
            "documentation": {
              "id": 28266,
              "nodeType": "StructuredDocumentation",
              "src": "635:92:26",
              "text": "@notice Initializes the contract by setting a name and a symbol to the token collection."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54687265655369676d614e4654",
                    "id": 28269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "753:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f24e7d3697dc8381b0859f233179e0867433685a87d977b7b11c7d33485bca14",
                      "typeString": "literal_string \"ThreeSigmaNFT\""
                    },
                    "value": "ThreeSigmaNFT"
                  },
                  {
                    "hexValue": "33534947",
                    "id": 28270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "770:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9903269fb769e46cb833cfbbf97174bc03c14d597f14b0e7238722c951d9fd13",
                      "typeString": "literal_string \"3SIG\""
                    },
                    "value": "3SIG"
                  }
                ],
                "id": 28271,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 28268,
                  "name": "ERC721",
                  "nameLocations": [
                    "746:6:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26420,
                  "src": "746:6:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "746:31:26"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:2:26"
            },
            "returnParameters": {
              "id": 28272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "777:0:26"
            },
            "scope": 28370,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28322,
            "nodeType": "FunctionDefinition",
            "src": "1045:487:26",
            "nodes": [],
            "body": {
              "id": 28321,
              "nodeType": "Block",
              "src": "1117:415:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28287,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1201:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 28288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1205:5:26",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1201:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 28289,
                          "name": "basePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28265,
                          "src": "1214:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1201:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756669636369656e742066756e6473",
                        "id": 28291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1225:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f88d6e551ca2cc47ea7947382c5778ba6041630f8fdd71e91d2fcd5a215f94b",
                          "typeString": "literal_string \"Insuficcient funds\""
                        },
                        "value": "Insuficcient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f88d6e551ca2cc47ea7947382c5778ba6041630f8fdd71e91d2fcd5a215f94b",
                          "typeString": "literal_string \"Insuficcient funds\""
                        }
                      ],
                      "id": 28286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1193:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:53:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28293,
                  "nodeType": "ExpressionStatement",
                  "src": "1193:53:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28294,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28263,
                        "src": "1305:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$26939_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 28296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1315:9:26",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26965,
                      "src": "1305:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$26939_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$26939_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 28297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:21:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28298,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:21:26"
                },
                {
                  "assignments": [
                    28300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28300,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "1344:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 28321,
                      "src": "1336:17:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28299,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1336:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28304,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28301,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28263,
                        "src": "1356:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$26939_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 28302,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1366:7:26",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26951,
                      "src": "1356:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$26939_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$26939_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 28303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1356:19:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1336:39:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28306,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28281,
                        "src": "1391:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 28307,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28300,
                        "src": "1398:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28305,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26076,
                      "src": "1385:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:23:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28309,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:23:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28313,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1479:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 28314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1483:5:26",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1479:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 28315,
                          "name": "basePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28265,
                          "src": "1489:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1479:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28310,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28281,
                        "src": "1464:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 28312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1470:8:26",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1464:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:35:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28318,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:35:26"
                },
                {
                  "expression": {
                    "id": 28319,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28300,
                    "src": "1516:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 28285,
                  "id": 28320,
                  "nodeType": "Return",
                  "src": "1509:16:26"
                }
              ]
            },
            "documentation": {
              "id": 28279,
              "nodeType": "StructuredDocumentation",
              "src": "874:166:26",
              "text": "@notice Allows to buy an NFT if enough ether is provided\n @param buyer The address of the buyer of the NFT\n @return newItemID ID of the token bought"
            },
            "functionSelector": "dd62b039",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyItem",
            "nameLocation": "1054:7:26",
            "parameters": {
              "id": 28282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28281,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1078:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 28322,
                  "src": "1062:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 28280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:15:26",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1061:23:26"
            },
            "returnParameters": {
              "id": 28285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28284,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28322,
                  "src": "1108:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:9:26"
            },
            "scope": 28370,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28341,
            "nodeType": "FunctionDefinition",
            "src": "1731:263:26",
            "nodes": [],
            "body": {
              "id": 28340,
              "nodeType": "Block",
              "src": "1797:197:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28331,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28327,
                        "src": "1897:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28330,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26143,
                      "src": "1891:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:14:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28333,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:14:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28337,
                        "name": "basePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28265,
                        "src": "1977:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28334,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28325,
                        "src": "1961:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 28336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1968:8:26",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1961:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1961:26:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28339,
                  "nodeType": "ExpressionStatement",
                  "src": "1961:26:26"
                }
              ]
            },
            "documentation": {
              "id": 28323,
              "nodeType": "StructuredDocumentation",
              "src": "1538:188:26",
              "text": "@notice Allows to sell an NFT for the base price, the NFT is then burned\n @param seller The address of the seller of the NFT\n @param tokenID TokenID of the NFT to be sold"
            },
            "functionSelector": "096c5e1a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellItem",
            "nameLocation": "1740:8:26",
            "parameters": {
              "id": 28328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28325,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1765:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 28341,
                  "src": "1749:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 28324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:15:26",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28327,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "1781:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 28341,
                  "src": "1773:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1748:41:26"
            },
            "returnParameters": {
              "id": 28329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:0:26"
            },
            "scope": 28370,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28359,
            "nodeType": "FunctionDefinition",
            "src": "2235:124:26",
            "nodes": [],
            "body": {
              "id": 28358,
              "nodeType": "Block",
              "src": "2306:53:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28352,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28344,
                        "src": "2330:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28353,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28346,
                        "src": "2336:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28354,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28348,
                        "src": "2340:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 28355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2349:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 28351,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25890,
                      "src": "2316:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 28356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2316:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28357,
                  "nodeType": "ExpressionStatement",
                  "src": "2316:36:26"
                }
              ]
            },
            "documentation": {
              "id": 28342,
              "nodeType": "StructuredDocumentation",
              "src": "2001:229:26",
              "text": "@notice Allows to transfer a NFT from an adress to another\n @param from The address of the owner of the NFT\n @param to The address of the recipient of the NFT\n @param tokenID TokenID of the NFT to be sold"
            },
            "functionSelector": "6295c61a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferItem",
            "nameLocation": "2244:12:26",
            "parameters": {
              "id": 28349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28344,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2265:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 28359,
                  "src": "2257:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2257:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28346,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2279:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 28359,
                  "src": "2271:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28348,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "2291:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 28359,
                  "src": "2283:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2283:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2256:43:26"
            },
            "returnParameters": {
              "id": 28350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2306:0:26"
            },
            "scope": 28370,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28369,
            "nodeType": "FunctionDefinition",
            "src": "2381:74:26",
            "nodes": [],
            "body": {
              "id": 28368,
              "nodeType": "Block",
              "src": "2408:47:26",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "72656365697665",
                        "id": 28363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2427:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b",
                          "typeString": "literal_string \"receive\""
                        },
                        "value": "receive"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 28364,
                          "name": "gasleft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -7,
                          "src": "2438:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 28365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2438:9:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b",
                          "typeString": "literal_string \"receive\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28362,
                      "name": "Log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28256,
                      "src": "2423:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 28366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2423:25:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28367,
                  "nodeType": "EmitStatement",
                  "src": "2418:30:26"
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2388:2:26"
            },
            "returnParameters": {
              "id": 28361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2408:0:26"
            },
            "scope": 28370,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28249,
              "name": "ERC721",
              "nameLocations": [
                "379:6:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26420,
              "src": "379:6:26"
            },
            "id": 28250,
            "nodeType": "InheritanceSpecifier",
            "src": "379:6:26"
          }
        ],
        "canonicalName": "ThreeSigmaNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28248,
          "nodeType": "StructuredDocumentation",
          "src": "209:144:26",
          "text": "@title ThreeSigmaNFT ME:C7\n @author Carolina P.\n @notice Contract used to deploy a basic NFT \n @dev Tests still need to be written"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28370,
          26420,
          26581,
          26536,
          27260,
          27272,
          26933
        ],
        "name": "ThreeSigmaNFT",
        "nameLocation": "362:13:26",
        "scope": 28371,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 26
}